// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id         Int      @id @default(autoincrement())
  employeeId Int
  Employee   Employee @relation(fields: [employeeId], references: [id])
  token      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// schema.prisma

model Employee {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  status    String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String   @db.VarChar(255)

  Schedules Schedule[]
  Points    Point[]
  Sessions  Session[]
}

// Define table models

model Schedule {
  id     Int    @id @default(autoincrement())
  status String

  // Relationships
  employeeId Int
  Employee   Employee @relation(fields: [employeeId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Point {
  id             Int      @id @default(autoincrement())
  employeeId     Int
  date           DateTime
  status         String
  entryTime      DateTime
  exitTime       DateTime
  justification  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  Employee Employee @relation(fields: [employeeId], references: [id])
  Records  Record[]
}

model PointStatus {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  Records Record[]
}

// Tabela de Registros
model Record {
  id            Int      @id @default(autoincrement())
  pointId       Int
  pointStatusId Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  Point       Point       @relation(fields: [pointId], references: [id])
  PointStatus PointStatus @relation(fields: [pointStatusId], references: [id])
}
